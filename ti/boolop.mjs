const allBool = (n) => {
  const appendToAll = (ar,v) => ar.map(x=>[...x,v]);
  if (n === 0) return [[]];
  const r = allBool(n-1);
  return [...appendToAll(r,false),...appendToAll(r,true)];
};
export const value = [
  {
    title: "پیاده‌سازی عملگر نقیض",
    text: [
      'برنامه ای بنویسید که یک مقدار true یا false را از ورودی بگیرد و آن را برعکس کند.',
      'یعنی اگر ورودی true باشد خروجی باید false باشد و اگر ورودی false باشد خروجی باید true باشد.',
    ],
    default: {
      "code": "(x)=> x ? 2 : 5",
      "input": "true",
    },
    test: allBool(1),
    judge: (x)=> !x,
  },
  {
    title: "عملگر نقیض",
    text: [
      'شما در قسمت قبل عملگر نقیض را پیاده کردید.',
      '!x همان کاری را می کند که برنامه شما انجام می داد. یعنی !true برابر false است و برعکس.',
      'حال شما باید برنامه‌ای بنویسید که سه مقدار بولی از ورودی بگیرد و اگر نقیض اولی درست بود مقدار نقیض دومی و در غیر این صورت مقدار نقیض سومی را برگرداند.',
    ],
    default: {
      "code": "(x, y) => !x ? 2 : ( y ? 5 : 20 )",
      "input": "true, false",
    },
    test: allBool(3),
    judge: (x,y,z)=> !x ? !y : !z,
  },
  {
    title: "پیاده‌سازی عملگر و",
    text: [
      'برنامه‌ای بنویسید که دو مقدار بولی از ورودی بگیرد و خروجی وقتی true باشد که هر دوی ورودی ها true باشند.',
      'در غیر این صورت (یکی از ورودی ها یا هردو false باشند) خروجی باید false باشد.',
    ],
    default: {
      "code": "(x)=> x ? 2 : 5",
      "input": "true",
    },
    test: allBool(1),
    judge: (x)=> !x,
  },
  {
    title: "عملگر و",
    text: [
      'شما در قسمت قبل عملگر "و منطقی" را پیاده کردید.',
      'عملگر a && b همان کاری را می کند که برنامه شما در قسمت قبل می کرد. یعنی تنها در صورتی که هر دو a و b برابر true باشند برابر true و در غیر این صورت false می‌شود.',
      'حال شما برنامه ای بنویسید که ۴ ورودی از کاربر بگیرد و تنها در صورتی true باشد که هر چهارتای آن‌ها true باشند.',
    ],
    default: {
      "code": "(x, y, z) => x && (!y && z)",
      "input": "true, false, true",
    },
    test: allBool(3),
    judge: (x,y,z)=> !x ? !y : !z,
  },
  {
    title: "پیاده‌سازی عملگر یا",
    text: [
      'برنامه ای بنویسید که یک مقدار true یا false را از ورودی بگیرد و آن را برعکس کند.',
      'یعنی اگر ورودی true باشد خروجی باید false باشد و اگر ورودی false باشد خروجی باید true باشد.',
    ],
    default: {
      "code": "(x)=> x ? 2 : 5",
      "input": "true",
    },
    test: allBool(1),
    judge: (x)=> !x,
  },
  {
    title: "عملگر یا",
    text: [
      'شما در قسمت قبل عملگر نقیض را پیاده کردید.',
      '!x همان کاری را می کند که برنامه شما انجام می داد. یعنی !true برابر false است و برعکس.',
      'حال شما باید برنامه‌ای بنویسید که سه مقدار بولی از ورودی بگیرد و اگر نقیض اولی درست بود مقدار نقیض دومی و در غیر این صورت مقدار نقیض سومی را برگرداند.',
    ],
    default: {
      "code": "(x, y) => !x ? 2 : ( y ? 5 : 20 )",
      "input": "true, false",
    },
    test: allBool(3),
    judge: (x,y,z)=> !x ? !y : !z,
  },
];