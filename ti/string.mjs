export const value = [
  {
    title: "نوشته ها",
    text: [
      'در قسمت های قبل با ابزار های کار با اعداد و مقادیر true و false آشنا شدیم. در این قسمت با نوشته‌ها آشنا می شویم.',
      'هر چیزی که درون "" یا \'\' یا `` بنویسید تبدیل به نوشته می شود.',
      'برنامه رو به رو یک عدد از ورودی می‌گیرد و وضعیت آن نسبت به ۵ را به صورت یک عبارت فارسی نمایش می دهد. خروجی آن را به ازای ورودی های مختلف امتحان کنید.',
      'توجه کنید که هنگام نوشتن عبارت های فارسی در میان برنامه که معمولا کاراکتر های انگلیسی دارد، ممکن است به دلیل مشکلات چپ چین و راست چین، نتوانید برنامه را به خوبی ببینید. می‌توانید با اضافه کردن خط های بیشتر این مشکل را حل کنید. فاصله ها و اینتر ها معمولا تغییری در محتوای برنامه ایجاد نمی کنند.',
      'برای رد کردن این مرحله، برنامه‌ای بنویسید که یک مقدار بولی ( true یا false ) از ورودی بگیرد و اگر true بود عبارت "ورودی صحیح است" را خروجی دهد و در غیر این صورت عبارت "ورودی غلط است" را برگرداند.',
    ],
    default: {
      "code": 
`(x) => 
  x<5 
? 
  'ورودی کوچک‌تر از ۵ است' 
: 
    x === 5 
  ?
    \`ورودی برابر ۵ است\`
  : 
    "ورودی بزرگتر از ۵ است."
`
      ,
      "input": "12",
    },
    test: [[true],[false]],
    judge: (x) => x ? 'ورودی صحیح است' : 'ورودی غلط است',
  },
  {
    title: "نوشته ها با ``",
    text: [
      'از میان سه علامتی که می‌توان با آن نوشته ها را مشخص کرد، `` خواص ویژه ای دارد:',
      '1- می توانید رشته هایی در چند خط تولید کنید.',
      '2- می توانید مقادیر عادی مثل اعداد، مقادیر بولی یا رشته های دیگر را درون ${} بنویسید. نتیجه به صورت خودکار تبدیل به رشته می شود و در جایگاه قرار می گیرد.',
      'برنامه رو به رو از این قابلیت ها استفاده می کند. می توانید دکمه تست را بزنید تا نتیجه را ببینید.',
      'برای رد کردن این مرحله برنامه ای بنویسید که دو رشته از ورودی بگیرد و آن‌ها را به هم بچسباند.',
      'مثال: ورودی = "سلام", "علیک"',
      "خروجی = 'سلامعلیک'",
    ],
    default: {
      "code": 
`(v1, v2, v3) => 
\` مقدار خروجی به شرح زیر است:
ورودی اول: \${v1}
ورودی دوم: \${v2}
ورودی سوم: \${v3}
جمع ورودی اول با ورودی دوم: \${v1+v2}
\${ 
    v1 > v2 
  ?
    'ورودی اول از ورودی دوم بزرگتر است' 
  :
    'ورودی دوم از ورودی اول بزرگتر است'
  }
\`
`
      ,
      input: '12, 28 , "salam"',
    },
    test: [["salam","aleyk"],["سلام ","علیک"]],
    judge: (x, y) => x + y,
  },
  
];