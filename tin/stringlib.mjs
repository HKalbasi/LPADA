export const value = [
  {
    title: 'اسم دادن به برنامه',
    text: [
      'از اینجای آموزش به بعد، ما به برنامه ای که می نویسیم اسم می دهیم.',
      'این کار فوایدی دارد که بعدا با آن آشنا می شویم.',
      'برای اسم دادن به برنامه، ابتدا const که یک کلمه کلیدی است را می نویسیم. نوشتن const یک قرارداد بین ما و کامپیوتر است.',
      'سپس اسم برنامه را می نویسیم. حرف اول باید حرفی انگلیسی باشد و حروف بعد می توانند حرف انگلیسی یا عدد باشند.',
      'سپس یک کاراکتر = می گذاریم و سپس محتوای برنامه را مانند قبل می نویسیم.',
      'در انتها یک علامت ; نیز می گذاریم. این علامت نیز قرارداد است.',
      'برای تست برنامه، اسمی که برای برنامه گذاشتید را در قسمت نام برنامه و ورودی را مثل قبل در قسمت ورودی بنویسید.',
      'برای رد کردن این مرحله، کافی است برنامه ای بنویسید که دو عدد را در هم ضرب کند.'
    ],
    default: {
      "code": 
`const main = (a, b) => a + b;
`
      ,
      input: '12, 28',
    },
    test: [[2, 5],[12, -4]],
    judge: (x, y) => x * y,
  },
  {
    title: 'برنامه های کمکی',
    text: [
      'علاوه بر برنامه اصلی، می‌توان برنامه هایی کمکی نیز تعریف کرد و از آن ها در محاسبه نتیجه استفاده کرد.',
      'برنامه های کمکی می توانند به خواننده برنامه کمک کنند تا برنامه را بهتر بفهمد و همچنین باعث کوتاه شدن برنامه می شود.',
      'برنامه رو به رو شامل یک برنامه اصلی و یک برنامه کمکی است. برنامه کمکی یک عدد را می گیرد و به توان ۴ می رساند.',
      'برنامه اصلی نیز سه عدد از ورودی می گیرد و جمع آن ها را به توان ۴ می رساند.',
      'برای اجرای برنامه های کمکی کافی است اسم آن ها را نوشته و یک پرانتز جلوی آن ها بگذاریم و درون پرانتز ورودی ها را بنویسیم.',
      'برنامه رو به رو برابر برنامه زیر است:',
      'const main = (a , b , c) => (a+b+c)*(a+b+c)*(a+b+c)*(a+b+c);',
      'همانطور که می بینیم فواید استفاده از توابع کمکی مشهود است.',
      'برای رد کردن مرحله کافی است برنامه ای بنویسید که یک ورودی بگیرد و آن را به توان ۱۶ برساند.',
      '(راهنمایی: می توانید چندین بار از برنامه های کمکی استفاده کنید)',
    ],
    default: {
      "code":
`const power4 = (x) => x*x*x*x
const main = (a, b, c) => power4(a+b+c);
`
      ,
      input: '1, 2, 3',
    },
    test: [[1],[2],[5],[6],[7],[8],[9],[0],[-7]],
    judge: (x) => Math.pow(x, 16),
  },
  {
    title: 'برنامه های کمکی آماده',
    text: [
      'برای راحتی ما، برخی از برنامه های کمکی نوشته شده است. برای مثال برنامه ای وجود دارد که می تواند یک عدد را به توان دیگری برساند.',
      'نام این برنامه، Math.pow می‌باشد. مثل برنامه های کمکی، برنامه های کمکی آماده را هم می توانید اجرا کنید. برنامه رو به رو ۵ می رساند.',
      'برنامه رو به رو یک عدد می گیرد و آن را به توان خودش می رساند.',
      'از جمله برنامه های کمکی، برنامه Math.floor است. این برنامه یک عدد اعشاری از ورودی می گیرد و اعشار آن را حذف می کند. به عبارت دیگر بزرگترین عدد صحیح کوچک تر از ورودی را خروجی می دهد.',
      'حال شما به کمک برنامه کمکی Math.floor باید برنامه ای بنویسید که یک عدد بگیرد و نزدیک ترین عدد صحیح نسبت به آن را برگرداند.',
      'به عبارتی دقیق تر اگر اعشار عدد ورودی از نیم کمتر بود باید عدد صحیح قبلی و در غیر این صورت عدد صحیح بعدی را خروجی دهید.',
    ],
    default: {
      code: `const main = (x) => Math.pow(x, x);`,
      input: '3',
    },
    test: [[1.1],[1.5], [-7.3], [-7.7]],
    judge: Math.round,
  },
];